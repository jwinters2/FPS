starting in fullscreen mode with dimensions 1920x1080
compiling vertex shader shaders/VertexShader.glsl:
compiling fragment shader shaders/FragmentShader.glsl:
linking shaders to program
loading model assets/errorModel.obj
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
A = [ -1, -0.5, -1 ]
    [ -1, -0.5, 1 ]
    [ -1, 1.5, -1 ]
    [ -1, 1.5, 1 ]
    [ 1, -0.5, -1 ]
    [ 1, -0.5, 1 ]
    [ 1, 1.5, -1 ]
    [ 1, 1.5, 1 ]

B = [ -1, -4, -1 ]
    [ -1, -4, 1 ]
    [ -1, -2, -1 ]
    [ -1, -2, 1 ]
    [ 1, -4, -1 ]
    [ 1, -4, 1 ]
    [ 1, -2, -1 ]
    [ 1, -2, 1 ]

support: [ 1, -0.5, -1 ]
simplex   = [ 1, -0.5, -1 ]
direction = [ -1, 0.5, 1 ]
support: [ -1, 1.5, 1 ]
nextPoint = [ -1, 1.5, 1 ]
nextPoint * direction = 2.75
Case 2 region [1] (no removal)

simplex   = [ 1, -0.5, -1 ]
            [ -1, 1.5, 1 ]
direction = [ -2, -4, 2 ]
support: [ -1, -0.5, 1 ]
nextPoint = [ -1, -0.5, 1 ]
nextPoint * direction = 6
Case 3 region 5 (swap)

simplex   = [ -1, 1.5, 1 ]
            [ 1, -0.5, -1 ]
            [ -1, -0.5, 1 ]
direction = [ 4, -0, 4 ]
support: [ 1, -0.5, 1 ]
nextPoint = [ 1, -0.5, 1 ]
nextPoint * direction = 8
colliding
shutting down graphics manager
